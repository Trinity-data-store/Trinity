/**
 * Autogenerated by Thrift Compiler (0.14.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "shared_types.h"

#include <algorithm>
#include <ostream>

#include <thrift/TToString.h>




SharedStruct::~SharedStruct() noexcept {
}


void SharedStruct::__set_key(const int32_t val) {
  this->key = val;
}

void SharedStruct::__set_value(const std::string& val) {
  this->value = val;
}
std::ostream& operator<<(std::ostream& out, const SharedStruct& obj)
{
  obj.printTo(out);
  return out;
}


void swap(SharedStruct &a, SharedStruct &b) {
  using ::std::swap;
  swap(a.key, b.key);
  swap(a.value, b.value);
  swap(a.__isset, b.__isset);
}

SharedStruct::SharedStruct(const SharedStruct& other0) {
  key = other0.key;
  value = other0.value;
  __isset = other0.__isset;
}
SharedStruct& SharedStruct::operator=(const SharedStruct& other1) {
  key = other1.key;
  value = other1.value;
  __isset = other1.__isset;
  return *this;
}
void SharedStruct::printTo(std::ostream& out) const {
  using ::apache::thrift::to_string;
  out << "SharedStruct(";
  out << "key=" << to_string(key);
  out << ", " << "value=" << to_string(value);
  out << ")";
}


